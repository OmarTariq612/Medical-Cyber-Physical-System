



#include <vector>
#include <string>


class DataSingleton {
private:
    static DataSingleton* instance;
    int data;

    // Private constructor so that no objects can be created.
    DataSingleton() {
        data = 0;
    }

public:
    // Static access method.
    static DataSingleton* getInstance() {
        if (instance == 0) {
            instance = new DataSingleton();
        }

        return instance;
    }


};

// Initialize pointer to zero so that it can be initialized in first call to getInstance
DataSingleton* DataSingleton::instance = 0;








/* create the node_table */


/*

vector<vector<int>> node_table = {
'SA'	    1	220	220	10	20	700	    700	    0	[150,300]	0	2
'CT'	    1	220	220	120	120	9999	9999	0	[150,360]	0	2
'AV'	    1	320	320	250	250	9999	9999	0	[350,230]	0	1
'OS'	    1	320	320	120	120	9999	9999	0	[100,200]	0	2
'His_p'	    1	320	320	120	120	9999	9999	0	[330,440]	0	2
'His_m'	    1	320	320	120	120	9999	9999	0	[330,440]	0	2
'His_d'	    1	320	320	120	120	9999	9999	0	[330,440]	0	2
'Bach'	    1	320	320	120	120	9999	9999	0	[150,360]	0	2
'LA_a'	    1	320	320	120	120	9999	9999	0	[150,360]	0	2
'LA'	    1	320	320	120	120	9999	9999	0	[150,360]	0	2
'RBB_m'	    1	320	320	120	120	9999	9999	0	[330,440]	0	2
'RBB'	    1	320	320	120	120	9999	9999	0	[330,440]	0	2
'LBB_m'	    1	320	320	120	120	9999	9999	0	[330,440]	0	2
'LBB'	    1	320	320	120	120	9999	9999	0	[330,440]	0	2
'RVA'	    1	320	320	120	120	9999	9999	0	[180,290]	0	2
'LVA'	    1	320	320	120	120	9999	9999	0	[180,290]	0	2
'RV_m'	    1	320	320	120	120	9999	9999	0	[180,290]	0	2
'RV'	    1	320	320	120	120	9999	9999	0	[180,290]	0	2
'LV_m'	    1	320	320	120	120	9999	9999	0	[180,290]	0	2
'LV'	    1	320	320	120	120	9999	9999	0	[180,290]	0	2
'CT_a'	    1	220	220	120	120	9999	9999	0	[150,360]	0	2
'RA_a'	    1	320	320	120	120	9999	9999	0	[150,360]	0	2
'RA'	    1	320	320	120	120	9999	9999	0	[150,360]	0	2
'SEP_RV_m'	1	320	320	120	120	9999	9999	0	[150,300]	0	2
'SEP_RV'	1	320	320	120	120	9999	9999	0	[150,300]	0	2
'SEP_LV_m'	1	320	320	120	120	9999	9999	0	[150,300]	0	2
'SEP_LV'	1	320	320	120	120	9999	9999	0	[150,300]	0	2
'CS_LV' 	1	320	320	120	120	9999	9999	0	[150,300]	0	2
'CS_LA'	    1	320	320	120	120	9999	9999	0	[150,300]	0	2
'slow_b'	1	320	320	200	200	9999	9999	0	[250,150]	0	1
'slow_a'	1	320	320	300	300	9999	9999	0	[250,150]	0	1
'fast'	    1	320	320	10	10	9999	9999	0	[500,380]	0	1
'fast_b'	1	320	320	10	10	9999	9999	0	[500,380]	0	1
}


//  Path Table 
std::vector<std::vector<int>> path_table = {
'SA_CT_a'   	1	1	21	10	1	1	57	57	57	57	56.8594759033180	2.26086956521739
'CT'	        1	21	2	10	1	1	85	85	85	85	84.8999411071645	-3.72727272727273
'slow_AV'	    1	30	3	5	1	1	19	19	19	19	19.2353840616713	1.52777777777778
'SA_OS'	        1	1	4	5	1	1	44	44	44	44	43.8634243989226	-1.06666666666667
'fast_AV'	    1	33	3	5	1	1	47	47	47	47	14.1421356237310	-7
'SA_Bach'	    1	1	8	5	3.01050244975818	3.01050244975818	40	40	40	40	120.420097990327	0.445454545454545
'Bach_LA_a'	    1	8	9	10	1	1	68	68	68	68	68.1835757349231	0.0735294117647059
'LA'	        1   9	10	10	1	1	35	35	35	35	34.6554469023269	-0.960000000000000
'AV_His'	    1	3	5	2	1	1	47	47	47	47	46.6904701197150	0.941176470588235
'His_p'	        1	5	6	2	2	2	16	16	16	16	32.0624390837628	0.0625000000000000
'His_d'	        1	6	7	2	2	2	20	20	20	20	39.6988664825584	-1.15384615384615
'His_RBB'	    1	7	11	2	2	2	36	36	36	36	72.4223722339996	-1.40476190476190
'His_LBB'	    1	7	13	2	2	2	37	37	37	37	74.5184540902453	-0.842105263157895
'RBB'	        1	11	12	2	4.25440947723653	4.25440947723653	20	20	20	20	85.0881895447306	-0.435897435897436
'LBB'	        1	13	14	2	3.82687862363049	3.82687862363049	20	20	20	20	76.5375724726098	-0.315068493150685
'RBB_RV'	    1	12	15	10	1	1	18	18	18	18	18.4390889145858	-1.16666666666667
'LBB_LV'    	1	14	16	10	1	1	19	19	19	19	18.6815416922694	-0.277777777777778
'RV_LV'	        1	15	16	10	2	2	17	17	17	17	34.8855270850248	1.93750000000000
'RV_m'	        1	15	17	10	5.76302871761021	5.76302871761021	20	20	20	20	115.260574352204	0.149122807017544
'LV_m'	        1	16	19	10	4.58938993767146	4.58938993767146	20	20	20	20	91.7877987534291	-7.58333333333333
'RV'	        1	17	18	10	5.30330085889911	5.30330085889911	20	20	20	20	106.066017177982	-0.548387096774194
'LV'	        1	19	20	10	3.94461658466320	3.94461658466320	20	20	20	20	78.8923316932641	-1.70000000000000
'SA_RA_a'	    1	1	22	10	1	1	40	40	40	40	40	0
'RA'	        1	22	23	10	1	1	35	35	35	35	34.7131099154196	-1.13043478260870
'SEP_RV'	    1	24	25	10	2	2	56	56	56	56	111.722871427475	-1
'SEP_RV_m'	    1	15	24	10	2	2	57	57	57	57	113.841995766062	-0.333333333333333
'SEP_LV'	    1	26	27	10	2	2	52	52	52	52	103.947101931704	-1.01369863013699
'SEP_LV_m'	    1	16	26	10	2	2	47	47	47	47	94.4139820153774	-0.542168674698795
'CS_LV'	        1   27	28	10	2	2	39	39	39	39	78.5684415016615	0.913793103448276
'CS_LA'	        1   23	29	5	2	2	59	59	59	59	117.596768663089	0.663265306122449
'slow'	        1   31	30	10	0.0900000000000000	0.0900000000000000	330	330	330	330	30.0166620396073	-30
'OS_slow'	    1	4	31	10	2	2	13	13	13	13	25	1.33333333333333
'OS_fast'	    1	4	32	10	2	2	10	10	10	10	20.0997512422418	-10
'fast'	        1	32	33	10	2	2	7	7	7	7	13.0384048104053	-13
}

*/
